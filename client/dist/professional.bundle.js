!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class o{static create(e,t,n){return new Proxy(e,{get:(e,r,l)=>t.includes(r)&&o._isFuntion(e[r])?function(){let t=Reflect.apply(e[r],e,arguments);return n(e),t}:Reflect.get(e,r,l),set(e,o,r,l){let a=Reflect.set(e,o,r,l);return t.includes(o)&&n(e),a}})}static _isFuntion(e){return typeof e==typeof Function}}class r{constructor(e,t,...n){let r=o.create(e,n,e=>t.update(e));return t.update(e),r}}class l{constructor(){this._professionals=[]}add(e){this._professionals.push(e)}get professionals(){return this._professionals}}class a{constructor(e){this._element=e}_template(e){throw new Error("Template method must be implemented")}update(e){this._element.innerHTML=this._template(e)}}class s extends a{constructor(e){super(e)}_template(e){return`\n        <div class="table-responsive">\n            <table class="table table-striped table-sm">\n            <thead>\n                <tr>\n                <th>Nome</th>\n                <th>Área de Atuação</th>\n                <th>Telefone</th>\n                <th>Celular</th>\n                <th>-</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${e.professionals.map(e=>`\n                    <tr>    \n                        <td>${e.name}</td>\n                        <td>${e.departament}</td>\n                        <td>${e.residencialPhone}</td>\n                        <td>${e.cellphone}</td>\n                        <td>\n                            <button type="button" class="btn btn-outline-primary btn-sm btn-edit-professional" data-professionalid="${e.id}">Editar</button>\n                            <button type="button" class="btn btn-outline-danger btn-sm">Remover</button>\n                        </td>\n                    </tr>\n                    `).join("")}\n            </tbody>\n            </table>\n        </div>\n        `}}class i{constructor(e,t,n,o,r=""){this._name=e,this._residencialPhone=t,this._cellphone=n,this._departament=o,this._id=r}get name(){return this._name}get residencialPhone(){return this._residencialPhone}get cellphone(){return this._cellphone}get departament(){return this._departament}get id(){return this._id}}class c{constructor(e){this._professional=new i}get professional(){return this._professional}include(e){this._professional=e,document.querySelector('input[name="name"]').value=e.name,document.querySelector('input[name="residencialPhone"]').value=e.residencialPhone,document.querySelector('input[name="cellphone"]').value=e.cellphone,document.querySelector('select[name="departament"]').value=e.departament}convertToModel(){let e=document.querySelector('input[name="name"]').value,t=document.querySelector('input[name="residencialPhone"]').value,n=document.querySelector('input[name="cellphone"]').value,o=document.querySelector('select[name="departament"]').value,r=document.querySelector('input[name="id"]').value;return this.clean(),new i(e,t,n,o,r)}clean(){this._professional=new i,document.querySelector('input[name="name"]').value="",document.querySelector('input[name="residencialPhone"]').value="",document.querySelector('input[name="cellphone"]').value="",document.querySelector('select[name="departament"]').value=""}}class u extends a{_template(e){return`\n            <input type="hidden" class="form-control" id="id" name="id" value="${e.professional.id?e.professional.id:""}">\n            <div class="form-group">\n                <label for="name">Nome</label>\n                <input type="text" class="form-control" id="name" name="name" placeholder="Maria Souza Silva" value="${e.professional.name?e.professional.name:""}">\n            </div>\n\n            <div class="form-row">\n                <div class="form-group col-md-6">\n                <label for="residencialPhone">Telefone</label>\n                <input type="text" class="form-control" id="residencialPhone" name="residencialPhone" value="${e.professional.residencialPhone?e.professional.residencialPhone:""}">\n                </div>\n                <div class="form-group col-md-6">\n                <label for="cellphone">Celular</label>\n                <input type="text" class="form-control" id="cellphone" name="cellphone" value="${e.professional.cellphone?e.professional.cellphone:""}">\n                </div>\n            </div>\n\n            <div class="form-row">\n                <div class="form-group col-md-6">\n                <label for="departament">Àrea de Atuação</label>\n                <select id="departament" class="form-control" name="departament">\n                    <option value="CABELELEIRA" "${"CABELELEIRA"==e.professional.departament?"selected":""}">Cabeleleira</option>\n                    <option value="MANICURE" "${"MANICURE"==e.professional.departament?"selected":""}">Manicure</option>\n                    <option value="DESIGNSOBRANCELHAS" "${"DESIGNSOBRANCELHAS"==e.professional.departament?"selected":""}">Design de Sobrancelhas</option>\n                    <option value="DEPILADORA" "${"DEPILADORA"==e.professional.departament?"selected":""}">Depiladora</option>\n                    <option value="ESTETICISTA" "${"ESTETICISTA"==e.professional.departament?"selected":""}">Esteticista</option>\n                </select>\n                </div>\n            </div>\n        `}}let d=new class{constructor(){this._professionalsList=new r(new l,new s(document.querySelector("#professionalList")),"add"),this._form=new r(new c(document.querySelector("#professionalForm")),new u(document.querySelector("#professionalFormFields")),"clean","include"),this.init()}init(){let e=new XMLHttpRequest;e.onreadystatechange=()=>{console.log(e.responseText)},e.open("GET","http://localhost:8080/professionals"),e.setRequestHeader("Content-type","application/json"),e.setRequestHeader("Access-Control-Allow-Origin",!0),e.send()}cleanProfessionalForm(){this._form.clean()}createProfessional(){let e=this._form.convertToModel();this._professionalsList.add(e)}editProfessional(e){console.log(e)}};document.querySelector(".btn-modal-professional").addEventListener("click",e=>{e.preventDefault(),$("#modalProfessional").modal("show")}),document.querySelector("#professionalForm").addEventListener("submit",e=>{e.preventDefault(),d.createProfessional(),$("#modalProfessional").modal("hide"),document.querySelectorAll(".btn-edit-professional").forEach(e=>e.addEventListener("click",(function(e){e.preventDefault();let t=this.dataset.professionalid;d.editProfessional(t)})))})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,